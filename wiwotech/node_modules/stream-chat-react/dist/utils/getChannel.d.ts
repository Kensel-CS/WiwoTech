import type { Channel, StreamChat } from 'stream-chat';
import type { DefaultStreamChatGenerics } from '../types/types';
declare type GetChannelParams<StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics> = {
    client: StreamChat<StreamChatGenerics>;
    channel?: Channel<StreamChatGenerics>;
    id?: string;
    members?: string[];
    type?: string;
};
/**
 * Calls channel.watch() if it was not already recently called. Waits for watch promise to resolve even if it was invoked previously.
 * @param client
 * @param members
 * @param type
 * @param id
 * @param channel
 */
export declare const getChannel: <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>({ channel, client, id, members, type, }: GetChannelParams<StreamChatGenerics>) => Promise<Channel<StreamChatGenerics>>;
export {};
//# sourceMappingURL=getChannel.d.ts.map